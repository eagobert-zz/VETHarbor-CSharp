@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<ApplicationRole> RoleManager
@model IndexViewModel
@{
    ViewData["Title"] = "Profile";
    ViewData.AddActivePage(ManageNavPages.Index);
}

<h4>@ViewData["Title"]</h4>
@*@Html.Partial("_StatusMessage", Model.StatusMessage)*@
<div class="row">
    <div class="col-md-6">
        <form method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Username"></label>
                <input asp-for="Username" class="form-control" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Email"></label>
                @if (Model.IsEmailConfirmed)
        {
            <div class="input-group">
                <input asp-for="Email" class="form-control" />
                <span class="input-group-addon" aria-hidden="true"><span class="glyphicon glyphicon-ok text-success"></span></span>
            </div>
}
else
{
        <input asp-for="Email" class="form-control" />
        <button asp-action="SendVerificationEmail" class="btn btn-link">Send verification email</button>
}
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            @*Begin User Role View*@

            @if (SignInManager.IsSignedIn(User) & User.IsInRole("User"))
    {
        <h1>You are in the User Role!</h1>
}


        @*Begin Administrator Role View*@

            @if (SignInManager.IsSignedIn(User) & User.IsInRole("Administrator"))
    {
        <h1>You are in the Administrator Role!</h1>
}

            <button type="submit" class="btn btn-default">Save</button>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
